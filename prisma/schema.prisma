// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  email     String         @unique
  password  String
  name      String?
  role      Role           @default(USER)
  favorites UserFavorite[]
  cartItems CartItem[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@map("users")
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("categories")
}

model Product {
  id            String         @id @default(cuid())
  name          String
  description   String?
  price         Float
  hasDiscount   Boolean        @default(false)
  discountPrice Float?
  quantity      Int
  images        String[]       @default([])
  categoryId    String
  category      Category       @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  favorites     UserFavorite[]
  cartItems     CartItem[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("products")
}

model UserFavorite {
  id        String   @id @default(cuid())
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, productId])
  @@map("user_favorites")
}

model CartItem {
  id        String   @id @default(cuid())
  userId    String
  productId String
  quantity  Int      @default(1)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
  @@map("cart_items")
}

enum Role {
  USER
  ADMIN
}